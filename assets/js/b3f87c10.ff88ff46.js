"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8335],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=p(n),d=i,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||a;return n?r.createElement(m,o(o({ref:t},s),{},{components:n})):r.createElement(m,o({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1546:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return f}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],c={id:"partition"},l=void 0,p={unversionedId:"partition",id:"partition",isDocsHomePage:!1,title:"partition",description:"partition() function",source:"@site/docs/partition.md",sourceDirName:".",slug:"/partition",permalink:"/docs/partition",tags:[],version:"current",frontMatter:{id:"partition"},sidebar:"api",previous:{title:"omitBy",permalink:"/docs/omitBy"},next:{title:"pick",permalink:"/docs/pick"}},s=[{value:"partition() function",id:"partition-function",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],u={toc:s};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"partition-function"},"partition() function"),(0,a.kt)("p",null,"Split Iterable/AsyncIterable into two arrays: one with all elements which satisfies ",(0,a.kt)("inlineCode",{parentName:"p"},"f")," and the other with all elements that does not."),(0,a.kt)("b",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"declare function partition<A, B>(f: (a: A) => B, iterable: Iterable<A>): [A[], A[]];\n\ndeclare function partition<A, B>(f: (a: A) => B, iterable: AsyncIterable<A>): Promise<[A[], A[]]>;\n\ndeclare function partition<A, L extends A, R extends A = Exclude<A, L>>(f: (a: A) => a is L, iterable: Iterable<A>): [L[], R[]];\n\ndeclare function partition<A, L extends A, R extends A = Exclude<A, L>>(f: (a: A) => a is L, iterable: AsyncIterable<A>): Promise<[L[], R[]]>;\n\ndeclare function partition<A extends Iterable<unknown> | AsyncIterable<unknown>, B>(f: (a: IterableInfer<A>) => B): (iterable: A) => ReturnPartitionType<A>;\n\ndeclare function partition<A extends Iterable<unknown> | AsyncIterable<unknown>, L extends IterableInfer<A>, R = Exclude<IterableInfer<A>, L>>(f: (a: IterableInfer<A>) => a is L): (iterable: A) => A extends AsyncIterable<any> ? Promise<[L[], R[]]> : [L[], R[]];\n")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"partition((a) => a % 2 === 0, [1, 2, 3, 4, 5]); // [[2, 4], [1, 3, 5]]\n\n// with pipe\npipe(\n  [1, 2, 3, 4, 5],\n  partition((a) => a % 2 === 0), // [[2, 4], [1, 3, 5]]\n);\n\nawait pipe(\n  Promise.resolve([1, 2, 3, 4, 5]),\n  partition((a) => a % 2 === 0), // [[2, 4], [1, 3, 5]]\n);\n\n// if you want to use asynchronous callback\nawait pipe(\n  Promise.resolve([1, 2, 3, 4, 5]),\n  toAsync,\n  partition(async (a) => a % 2 === 0), // [[2, 4], [1, 3, 5]]\n);\n\n// with toAsync\nawait pipe(\n  [Promise.resolve(1), Promise.resolve(2), Promise.resolve(3), Promise.resolve(4), Promise.resolve(5)],\n  toAsync,\n  partition((a) => a % 2 === 0), // [[2, 4], [1, 3, 5]]\n);\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/fxts-partition-7vns0"},"Try It")),(0,a.kt)("p",null,"see ",(0,a.kt)("a",{parentName:"p",href:"https://fxts.dev/docs/pipe"},"pipe"),", ",(0,a.kt)("a",{parentName:"p",href:"https://fxts.dev/docs/toAsync"},"toAsync")))}f.isMDXComponent=!0}}]);