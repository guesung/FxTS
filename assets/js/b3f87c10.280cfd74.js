"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9869],{1496:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(4848),i=t(8453);const a={id:"partition"},o=void 0,s={id:"partition",title:"partition",description:"partition() function",source:"@site/docs/partition.md",sourceDirName:".",slug:"/partition",permalink:"/docs/partition",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"partition"},sidebar:"api",previous:{title:"omitBy",permalink:"/docs/omitBy"},next:{title:"pick",permalink:"/docs/pick"}},c={},l=[{value:"partition() function",id:"partition-function",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"partition-function",children:"partition() function"}),"\n",(0,r.jsxs)(n.p,{children:["Split Iterable/AsyncIterable into two arrays: one with all elements which satisfies ",(0,r.jsx)(n.code,{children:"f"})," and the other with all elements that does not."]}),"\n",(0,r.jsx)("b",{children:"Signature:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"declare function partition<A, B>(f: (a: A) => B, iterable: Iterable<A>): [A[], A[]];\n\ndeclare function partition<A, B>(f: (a: A) => B, iterable: AsyncIterable<A>): Promise<[A[], A[]]>;\n\ndeclare function partition<A extends Iterable<unknown> | AsyncIterable<unknown>, B>(f: (a: IterableInfer<A>) => B): (iterable: A) => ReturnPartitionType<A>;\n\ndeclare function partition<A, L extends A, R extends A = A extends object ? ExcludeObject<A, L> : Exclude<A, L>>(f: (a: A) => a is L, iterable: Iterable<A>): [L[], R[]];\n\ndeclare function partition<A, L extends A, R extends A = A extends object ? ExcludeObject<A, L> : Exclude<A, L>>(f: (a: A) => a is L, iterable: AsyncIterable<A>): Promise<[L[], R[]]>;\n\ndeclare function partition<A extends Iterable<unknown> | AsyncIterable<unknown>, B extends IterableInfer<A>, L extends B, R extends B = B extends object ? ExcludeObject<B, L> : Exclude<B, L>>(f: (a: IterableInfer<A>) => a is L): (iterable: A) => A extends AsyncIterable<any> ? Promise<[L[], R[]]> : [L[], R[]];\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"partition((a) => a % 2 === 0, [1, 2, 3, 4, 5]); // [[2, 4], [1, 3, 5]]\r\n\r\n// with pipe\r\npipe(\r\n  [1, 2, 3, 4, 5],\r\n  partition((a) => a % 2 === 0), // [[2, 4], [1, 3, 5]]\r\n);\r\n\r\nawait pipe(\r\n  Promise.resolve([1, 2, 3, 4, 5]),\r\n  partition((a) => a % 2 === 0), // [[2, 4], [1, 3, 5]]\r\n);\r\n\r\n// if you want to use asynchronous callback\r\nawait pipe(\r\n  Promise.resolve([1, 2, 3, 4, 5]),\r\n  toAsync,\r\n  partition(async (a) => a % 2 === 0), // [[2, 4], [1, 3, 5]]\r\n);\r\n\r\n// with toAsync\r\nawait pipe(\r\n  [Promise.resolve(1), Promise.resolve(2), Promise.resolve(3), Promise.resolve(4), Promise.resolve(5)],\r\n  toAsync,\r\n  partition((a) => a % 2 === 0), // [[2, 4], [1, 3, 5]]\r\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://codesandbox.io/s/fxts-partition-7vns0",children:"Try It"})}),"\n",(0,r.jsxs)(n.p,{children:["see ",(0,r.jsx)(n.a,{href:"https://fxts.dev/docs/pipe",children:"pipe"}),", ",(0,r.jsx)(n.a,{href:"https://fxts.dev/docs/toAsync",children:"toAsync"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/marpple/FxTS/blob/main/src/partition.ts",children:"Open Source Code"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(6540);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);