"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3790],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(t),d=a,m=s["".concat(l,".").concat(d)]||s[d]||f[d]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=s;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},8531:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return s}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],c={id:"fx"},l=void 0,p={unversionedId:"fx",id:"fx",isDocsHomePage:!1,title:"fx",description:"fx() function",source:"@site/docs/fx.md",sourceDirName:".",slug:"/fx",permalink:"/docs/fx",tags:[],version:"current",frontMatter:{id:"fx"},sidebar:"api",previous:{title:"flatMap",permalink:"/docs/flatMap"},next:{title:"intersection",permalink:"/docs/intersection"}},u=[{value:"fx() function",id:"fx-function",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],f={toc:u};function s(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"fx-function"},"fx() function"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"fx")," allows functions provided by existing ",(0,o.kt)("inlineCode",{parentName:"p"},"fxts")," to be used in a method chaining. Not all functions are provided as methods and can be connected through ",(0,o.kt)("inlineCode",{parentName:"p"},"chain")," if necessary."),(0,o.kt)("p",null,"see ",(0,o.kt)("a",{parentName:"p",href:"https://fxts.dev/docs/method-chaining"},"guide")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"declare function fx<T extends Iterable<unknown> | AsyncIterable<unknown>>(a: T): T extends Iterable<unknown> ? FxIterable<IterableInfer<T>> : FxAsyncIterable<IterableInfer<T>>;\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns:")),(0,o.kt)("p",null,"T extends Iterable","<","unknown",">"," ? FxIterable","<","IterableInfer","<","T",">",">"," : FxAsyncIterable","<","IterableInfer","<","T",">",">"),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const syncArr1 = fx([1, 2, 3, 4])\n  .map((a) => a + 10)\n  .toArray(); // [11, 12, 13, 14]\n\n// If you want to use another function that is not provided for the method, use `chain`.\nconst syncArr2 = fx([1, 2, 3, 4])\n  .chain(append(5))\n  .map((a) => a + 10)\n  .toArray(); // [11, 12, 13, 14, 15]\n\nconst asyncArr1 = await fx([1, 2, 3, 4])\n  .toAsync()\n  .map((a) => a + 10)\n  .toArray(); // [11, 12, 13, 14]\n\nconst asyncArr2 = await fx(toAsync([1, 2, 3, 4]));\n  .map((a) => a + 10)\n  .toArray(); // [11, 12, 13, 14]\n")))}s.isMDXComponent=!0}}]);