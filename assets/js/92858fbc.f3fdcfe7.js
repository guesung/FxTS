"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7212],{5787:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=n(4848),o=n(8453);const r={id:"omitBy"},a=void 0,c={id:"omitBy",title:"omitBy",description:"omitBy() function",source:"@site/docs/omitBy.md",sourceDirName:".",slug:"/omitBy",permalink:"/docs/omitBy",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"omitBy"},sidebar:"api",previous:{title:"omit",permalink:"/docs/omit"},next:{title:"partition",permalink:"/docs/partition"}},s={},d=[{value:"omitBy() function",id:"omitby-function",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"omitby-function",children:"omitBy() function"}),"\n",(0,i.jsx)(t.p,{children:"Returns a partial copy of an object containing only the keys that satisfy the supplied predicate."}),"\n",(0,i.jsx)("b",{children:"Signature:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"declare function omitBy<T extends object, F extends EntryPredicate<T>>(f: F, obj: T): Partial<T>;\n\ndeclare function omitBy<T extends object, F extends EntryPredicate<T>>(f: F): (obj: T) => Partial<T>;\n\ndeclare function omitBy<T extends object, F extends AsyncEntryPredicate<T>>(f: F, obj: T): Promise<Partial<T>>;\n\ndeclare function omitBy<T extends object, F extends AsyncEntryPredicate<T>>(f: F): (obj: T) => Promise<Partial<T>>;\n\ndeclare function omitBy<T extends object, F extends ConditionalAsyncEntryPredicate<T>>(f: F, obj: T): Partial<T> | Promise<Partial<T>>;\n\ndeclare function omitBy<T extends object, F extends ConditionalAsyncEntryPredicate<T>>(f: F): (obj: T) => Partial<T> | Promise<Partial<T>>;\n"})}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'const obj = { a: 1, b: "2", c: true };\r\nomitBy(([key, value]) => key === "a" || value === true, obj); // { b: "2" }\r\n\r\n// asynchronous predicate\r\nawait omitBy(async ([key, value]) => key === "a" || value === true, obj); // { b: "2" }\r\n\r\n// Using with the `pipe` function\r\npipe(\r\n  obj,\r\n  omitBy(([key, value]) => key === "a" || value === true)\r\n);\r\n\r\nawait pipe(\r\n  obj,\r\n  omitBy(async ([key, value]) => key === "a" || value === true)\r\n);\n'})}),"\n",(0,i.jsxs)(t.p,{children:["see ",(0,i.jsx)(t.a,{href:"https://fxts.dev/docs/pipe",children:"pipe"}),", ",(0,i.jsx)(t.a,{href:"https://fxts.dev/docs/omit",children:"omit"}),","]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var i=n(6540);const o={},r=i.createContext(o);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);