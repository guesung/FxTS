"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1331],{8001:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=a(4848),r=a(8453);const s={id:"lazy-evaluation"},i="Lazy Evaluation",o={id:"lazy-evaluation",title:"Lazy Evaluation",description:"FxTS provides lazy evaluation.",source:"@site/docs/lazy-evaluation.md",sourceDirName:".",slug:"/lazy-evaluation",permalink:"/docs/lazy-evaluation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"lazy-evaluation"},sidebar:"docs",previous:{title:"Function Composition",permalink:"/docs/function-composition"},next:{title:"Handle Concurrency",permalink:"/docs/handle-concurrency"}},l={},c=[{value:"Useful Example",id:"useful-example",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"lazy-evaluation",children:"Lazy Evaluation"}),"\n",(0,t.jsxs)(n.p,{children:["FxTS provides ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Lazy_evaluation",children:"lazy evaluation"}),".\nLet me explain through code why lazy evaluation is useful."]}),"\n",(0,t.jsx)(n.p,{children:"We often see code like the one below. By writing code declaratively, we want to make code that is maintainable and easy to read."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const sum = (a: number, b: number) => a + b;\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  .filter((a) => a % 2 === 0)\n  .map((a) => a * a)\n  .reduce(sum);\n"})}),"\n",(0,t.jsx)(n.p,{children:"It looks very readable. Now let's see how it works."}),"\n",(0,t.jsxs)(n.p,{children:["To treat it as ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Immutable_object",children:"immutable"}),", each time the method proceeds,\nan array of a new size is created and the array is traversed."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  .filter((a) => a % 2 === 0) // [0, 2, 4, 6, 8]\n  .map((a) => a * a) // [0, 4, 16, 36, 64]\n  .reduce(sum); // 120\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Because it iterates through all the array values,\nthe logic that reduces the size of the array, such as ",(0,t.jsx)(n.code,{children:"slice"})," and ",(0,t.jsx)(n.code,{children:"filter"}),", is usually placed in front of the logic\n(That way you can have fewer traversals)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  .filter((a) => a % 2 === 0) // [0, 2, 4, 6, 8]\n  .slice(0, 2); // [0, 2]\n  .map((a) => a * a) // [0, 4]\n  .reduce(sum); // 4\n"})}),"\n",(0,t.jsx)(n.p,{children:"Currently, the size of array is very small, so it doesn't seem like a problem.\nBut if the size gets really big, do we have to go back to imperative programming?"}),"\n",(0,t.jsxs)(n.p,{children:["FxTS can be used as a combination of functions that deal with ",(0,t.jsx)(n.code,{children:"Iterable"}),"/",(0,t.jsx)(n.code,{children:"AsyncIterble"}),",\nin which case it evaluates the value from the ",(0,t.jsx)(n.code,{children:"Iterable"}),"/",(0,t.jsx)(n.code,{children:"AsyncIterable"})," only as needed."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"take(2)"}),"(only 2 values) are evaluated and no further values are evaluated after that.\nIn addition, the above code ",(0,t.jsx)(n.code,{children:"Array.prototype.filter"})," needs to traverse all values,\nwhile the code below only evaluates the values it needs. Even the ",(0,t.jsx)(n.code,{children:"filter"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"pipe(\n  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n  filter((a) => a % 2 === 0), // [0, 2]\n  map((a) => a * a), // [0, 4]\n  take(2), // [0, 4]\n  reduce(sum), // 4\n);\n"})}),"\n",(0,t.jsx)(n.p,{children:"FxTS are a useful way to represent large or possibly infinite enumerable data sets"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"pipe(\n  range(Infinity),\n  filter((a) => a % 2 === 0), // [0, 2]\n  map((a) => a * a), // [0, 4]\n  take(2), // [0, 4]\n  reduce(sum), // 4\n);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Combinations of ",(0,t.jsx)(n.code,{children:"Lazy"})," functions don't evaluate actual values like ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",children:"generator"}),".\nIt can be evaluated with a ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of",children:"for-of"})," or\n",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of",children:"await for-of"}),",\n",(0,t.jsx)(n.code,{children:"Strict"})," functions. ",(0,t.jsx)(n.code,{children:"Strict"})," functions can be found ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/index#strict",children:"here"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const squareNums = pipe(\n  range(Infinity),\n  map((a) => a * a),\n); // not evaluated not yet\n\nconst result = pipe(\n  squareNums,\n  filter((a) => a % 2 === 0),\n  take(10),\n  toArray, // Strict function\n);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Lazy functions can be found ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/index#lazy",children:"here"})]}),"\n",(0,t.jsx)(n.h3,{id:"useful-example",children:"Useful Example"}),"\n",(0,t.jsx)(n.p,{children:"The code below shows a more useful situation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"/**\n * [{\n *   title: string,\n *   director: string,\n *   language: string,\n *   genre: string,\n *   rating: number,\n *   ...\n * }]\n */\nconst fetchMovie = async (year: number) =>\n  fetch(`https://api.movie.xxx/${year}`);\n\nconst recommendMovie = async (year: number, rating: number) =>\n  pipe(\n    range(year, Infinity),\n    toAsync,\n    map(fetchMovie),\n    map((res) => res.json()),\n    filter((movie) => movie.rating >= rating),\n    head,\n  );\n\nawait recommendMovie(2020, 9);\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var t=a(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);