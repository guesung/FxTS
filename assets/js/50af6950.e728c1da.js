"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3601],{7164:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var o=t(4848),r=t(8453);const a={id:"handle-concurrency"},c="Handle Concurrency",s={id:"handle-concurrency",title:"Handle Concurrency",description:"concurrent is a function that can handle multiple asynchronous values at once.",source:"@site/docs/handle-concurrency.md",sourceDirName:".",slug:"/handle-concurrency",permalink:"/docs/handle-concurrency",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"handle-concurrency"},sidebar:"docs",previous:{title:"Lazy Evaluation",permalink:"/docs/lazy-evaluation"},next:{title:"Error handling",permalink:"/docs/error-handling"}},l={},i=[{value:"Useful Example",id:"useful-example",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"handle-concurrency",children:"Handle Concurrency"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"concurrent"})," is a function that can handle multiple asynchronous values at once."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["In javascript, there is a function to evaluate multiple promise values at the same time with ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all",children:"Promise.all"}),".\nHowever, it cannot handle the load of concurrent requests and cannot handle requests for infinite enumerable data sets.\n",(0,o.jsx)(n.a,{href:"https://fxts.dev/docs/concurrent",children:"concurrent"})," can handle asynchronous requests of infinite datasets and can control the request size of the load."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'// prettier-ignore\nimport { pipe, toAsync, range, map, filter, take, each, concurrent } from "@fxts/core";\n\nconst fetchApi = (page) =>\n  new Promise((resolve) => setTimeout(() => resolve(page), 1000));\n\nawait pipe(\n  range(Infinity),\n  toAsync,\n  map(fetchApi), // 0,1,2,3,4,5\n  filter((a) => a % 2 === 0),\n  take(3), // 0,2,4\n  concurrent(3), // If this line does not exist, it will take a total of 6 seconds.\n  each(console.log), // 2 seconds\n);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can see that it takes 6 seconds when requesting one by one but takes 2 seconds when requesting using ",(0,o.jsx)(n.code,{children:"concurrent"})]}),"\n",(0,o.jsx)(n.h3,{id:"useful-example",children:"Useful Example"}),"\n",(0,o.jsx)(n.p,{children:"A more practical code is below."}),"\n",(0,o.jsx)("iframe",{src:"https://codesandbox.io/embed/fxts-concurrent-useful-0frg2?fontsize=14&hidenavigation=1&theme=dark",style:{height:800,width:"100%",border:0,borderRadius:4,overflow:"hidden"},title:"fxts-concurrent-useful",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}),"\n",(0,o.jsxs)(n.p,{children:["If the position of ",(0,o.jsx)(n.code,{children:"concurrent"})," in the code above is as follows, would the result be different?\nNo, It would be same! Note that ",(0,o.jsx)(n.code,{children:"concurrent"})," always applies to ",(0,o.jsx)(n.code,{children:"Iterable"})," before the length is changed."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"await pipe(\n  range(Infinity),\n  toAsync,\n  map(fetchApi),\n  concurrent(3),\n  filter((a) => a % 2 === 0),\n  take(3),\n  each(console.log),\n);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If you want to sequentially evaluate up to ",(0,o.jsx)(n.code,{children:"map"})," one by one,\nand evaluate the asynchronous predicate of ",(0,o.jsx)(n.code,{children:"filter"})," three at the same time, you should write the code below:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"await pipe(\n  range(Infinity),\n  toAsync,\n  map(fetchApi),\n  toArray,\n  filter((a) => delay(100, a % 2 === 0)),\n  take(3),\n  concurrent(3),\n  each(console.log),\n);\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var o=t(6540);const r={},a=o.createContext(r);function c(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);