"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5239],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return f}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function u(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),i=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):u(u({},n),e)),r},p=function(e){var n=i(e.components);return t.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=i(r),f=a,y=d["".concat(l,".").concat(f)]||d[f]||s[f]||c;return r?t.createElement(y,u(u({ref:n},p),{},{components:r})):t.createElement(y,u({ref:n},p))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=r.length,u=new Array(c);u[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,u[1]=o;for(var i=2;i<c;i++)u[i]=r[i];return t.createElement.apply(null,u)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1541:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return i},toc:function(){return p},default:function(){return d}});var t=r(7462),a=r(3366),c=(r(7294),r(3905)),u=["components"],o={id:"reduceLazy"},l=void 0,i={unversionedId:"reduceLazy",id:"reduceLazy",isDocsHomePage:!1,title:"reduceLazy",description:"reduceLazy() function",source:"@site/docs/reduceLazy.md",sourceDirName:".",slug:"/reduceLazy",permalink:"/docs/reduceLazy",tags:[],version:"current",frontMatter:{id:"reduceLazy"}},p=[{value:"reduceLazy() function",id:"reducelazy-function",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],s={toc:p};function d(e){var n=e.components,r=(0,a.Z)(e,u);return(0,c.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"reducelazy-function"},"reduceLazy() function"),(0,c.kt)("p",null,"High order functional version of ",(0,c.kt)("inlineCode",{parentName:"p"},"reduce"),", which behaves identical to it."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Signature:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"declare function reduceLazy<T extends Iterable<unknown> | AsyncIterable<unknown>, Acc>(f: SyncReducer<Acc, IterableInfer<T>> | AsyncReducer<Acc, IterableInfer<T>>, seed: Acc): (iterable: InferCarrier<T>) => ReturnValueType<T, Acc>;\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Returns:")),(0,c.kt)("p",null,"(iterable: InferCarrier","<","T",">",") =",">"," ReturnValueType","<","T, Acc",">"),(0,c.kt)("h2",{id:"example"},"Example"),(0,c.kt)("p",null,"Type must be provided for stand alone call."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"const reduce = reduceLazy((a: number, b: number) => a + b, 5)\n\nreduce([1, 2, 3]) // number\nreduce(toAsync([1, 2, 3])) // Promise<number>\n")),(0,c.kt)("p",null,"Fit perfectly with ",(0,c.kt)("inlineCode",{parentName:"p"},"pipe")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"pipe(\n  [1, 2, 3, 4],\n  reduceLazy((a, b) => a + b, 5)\n); // 15\n")),(0,c.kt)("p",null,"You can use asynchronous callback"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"await pipe(\n  [1, 2, 3, 4],\n  reduceLazy(async (a, b) => a + b, 5)\n); // 15\n")),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"AsyncIterable")," doesn't matter."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"await pipe(\n  [1, 2, 3, 4],\n  toAsync,\n  reduceLazy((a, b) => a + b, 5)\n); // 15\n")))}d.isMDXComponent=!0}}]);