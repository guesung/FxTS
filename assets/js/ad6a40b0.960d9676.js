"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4245],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(t),f=r,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return t?a.createElement(m,i(i({ref:n},s),{},{components:t})):a.createElement(m,i({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6681:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),i=["components"],c={id:"method-chaining"},l="Method Chaining",p={unversionedId:"method-chaining",id:"method-chaining",isDocsHomePage:!1,title:"Method Chaining",description:"You can handle Iterable/AsyncIterable through a pipe, but fxts also provides data change in the form of method chaining.",source:"@site/docs/method-chaining.md",sourceDirName:".",slug:"/method-chaining",permalink:"/docs/method-chaining",tags:[],version:"current",frontMatter:{id:"method-chaining"},sidebar:"docs",previous:{title:"Error handling",permalink:"/docs/error-handling"},next:{title:"When to use the `toAsync` function?",permalink:"/docs/to-async"}},s=[{value:"Note",id:"note",children:[],level:3},{value:"Support for handling AsyncIterable",id:"support-for-handling-asynciterable",children:[],level:3},{value:"Handle Concurrency",id:"handle-concurrency",children:[],level:3},{value:"Etc",id:"etc",children:[],level:3}],u={toc:s};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"method-chaining"},"Method Chaining"),(0,o.kt)("p",null,"You can handle Iterable/AsyncIterable through a ",(0,o.kt)("a",{parentName:"p",href:"https://fxts.dev/docs/pipe"},"pipe"),", but ",(0,o.kt)("inlineCode",{parentName:"p"},"fxts")," also provides data change in the form of method chaining."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'fx([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n  .filter((a) => a % 2 === 0) // [0, 2]\n  .map((a) => a * a) // [0, 4]\n  .take(2) // [0, 4]\n  .reduce(sum); // 4\n\nfx("abc")\n  .map((a) => a.toUpperCase()) // ["a", "b"]\n  .take(2)\n  .toArray(); // ["a", "b"]\n')),(0,o.kt)("h3",{id:"note"},"Note"),(0,o.kt)("p",null,"Since ",(0,o.kt)("inlineCode",{parentName:"p"},"fx")," defaults to lazy evaluation, it is not actually evaluated until strict evaluation methods such as ",(0,o.kt)("inlineCode",{parentName:"p"},"toArray"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"groupBy"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"indexBy"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"some")," are executed."),(0,o.kt)("p",null,"For details on lazy evaluation, please refer to ",(0,o.kt)("a",{parentName:"p",href:"https://fxts.dev/docs/lazy-evaluation"},"https://fxts.dev/docs/lazy-evaluation"),"."),(0,o.kt)("h3",{id:"support-for-handling-asynciterable"},"Support for handling AsyncIterable"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"fx")," can also handle ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncIterator"},"AsyncIterator")," values. ",(0,o.kt)("inlineCode",{parentName:"p"},"toAsync")," is used in the example below to create an ",(0,o.kt)("inlineCode",{parentName:"p"},"AsyncIterator")," value."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"await fx(toAsync([1, 2, 3, 4]))\n  .filter(async (a) => a % 2 === 0)\n  .map(async (a) => a * a)\n  .reduce(sum);\n\nawait fx([1, 2, 3, 4])\n  .filter((a) => a % 2 === 0)\n  .toAsync() // if async function returns\n  .map(async (a) => a * a)\n  .reduce(sum);\n")),(0,o.kt)("h3",{id:"handle-concurrency"},"Handle Concurrency"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"fx")," supports concurrent operation. As we saw in concurrent, concurrent can only be used in asyncIterable."),(0,o.kt)("p",null,"For details on handling concurrent with ",(0,o.kt)("inlineCode",{parentName:"p"},"fxts"),", please refer to ",(0,o.kt)("a",{parentName:"p",href:"https://fxts.dev/docs/handle-concurrency"},"https://fxts.dev/docs/handle-concurrency")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"/**\n *\n *  evaluation\n *               \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510\n *               \u2502  1  \u2502\u2500\u2500\u2502  2  \u2502\u2500\u2500\u2502  3  \u2502\u2500\u2500\u2502  4  \u2502\u2500\u2500\u2502  5  \u2502\u2500\u2500\u2502  6  \u2502\n *               \u2514\u2500\u2500\u252c\u2500\u2500\u2518  \u2514\u2500\u2500\u252c\u2500\u2500\u2518  \u2514\u2500\u2500\u252c\u2500\u2500\u2518  \u2514\u2500\u2500\u252c\u2500\u2500\u2518  \u2514\u2500\u2500\u252c\u2500\u2500\u2518  \u2514\u2500\u2500\u252c\u2500\u2500\u2518\n *       map        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502\n *  concurrent(2)  (1)      (1)      (2)      (2)      (3)      (3)\n *                  \u2502        \u2502        \u2502        \u2502        \u2502        \u2502\n *                  \u25bc        \u25bc        \u25bc        \u25bc        \u25bc        \u25bc\n */\nawait fx(toAsync(range(1, 7)))\n  // async function returns\n  .map(async (a) => delay(100, a))\n  .concurrent(2)\n  .consume(); // It takes approximately 300ms.\n")),(0,o.kt)("h3",{id:"etc"},"Etc"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"fx")," does not provide all the functions of ",(0,o.kt)("inlineCode",{parentName:"p"},"fxts")," as methods."),(0,o.kt)("p",null,"If you want to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"fxts")," function which is not provided or additional functions, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"chain")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"fx([1, 2, 3, 4])\n  .chain(append(5))\n  .map((a) => a + 10)\n  .toArray(); // [11, 12, 13, 14, 15]\n")))}d.isMDXComponent=!0}}]);