"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9806],{3527:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>y,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var r=t(4848),i=t(8453);const s={id:"indexBy"},a=void 0,o={id:"indexBy",title:"indexBy",description:"indexBy() function",source:"@site/docs/indexBy.md",sourceDirName:".",slug:"/indexBy",permalink:"/docs/indexBy",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"indexBy"},sidebar:"api",previous:{title:"includes",permalink:"/docs/includes"},next:{title:"isArray",permalink:"/docs/isArray"}},c={},d=[{value:"indexBy() function",id:"indexby-function",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"indexby-function",children:"indexBy() function"}),"\n",(0,r.jsxs)(n.p,{children:["Given ",(0,r.jsx)(n.code,{children:"f"})," that generates a key, turns a list of objects into an object indexing the objects by the given key. Note that if multiple objects generate the same value for the indexing key only the last value will be included in the generated object."]}),"\n",(0,r.jsx)("b",{children:"Signature:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"declare function indexBy<A extends Key>(f: (a: A) => A, iterable: Iterable<A>): {\n    [K in A]: K;\n};\n\ndeclare function indexBy<A, B extends Key>(f: (a: A) => B, iterable: Iterable<A>): {\n    [K in B]: A;\n};\n\ndeclare function indexBy<A extends Key>(f: (a: A) => A | Promise<A>, iterable: AsyncIterable<A>): Promise<{\n    [K in A]: K;\n}>;\n\ndeclare function indexBy<A, B extends Key>(f: (a: A) => B | Promise<B>, iterable: AsyncIterable<A>): Promise<{\n    [K in B]: A;\n}>;\n\ndeclare function indexBy<A extends object, B extends Key & A[keyof A]>(f: (a: A) => B, iterable: Iterable<A>): {\n    [K in B]: A & {\n        [K2 in GetKeyOf<A, B>]: K;\n    };\n};\n\ndeclare function indexBy<A extends object, B extends Key & A[keyof A]>(f: (a: A) => B | Promise<B>, iterable: AsyncIterable<A>): Promise<{\n    [K in B]: A & {\n        [K2 in GetKeyOf<A, B>]: K;\n    };\n}>;\n\ndeclare function indexBy<A extends Iterable<unknown> | AsyncIterable<unknown>, B extends Key>(f: (a: IterableInfer<A>) => B | Promise<B>): (iterable: A) => ReturnValueType<A, {\n    [K in B]: IterableInfer<A>;\n}>;\n\ndeclare function indexBy<I extends Iterable<unknown> | AsyncIterable<unknown>, F extends (a: IterableInfer<I>) => any>(f: F): (iterable: I) => ReturnValueType<I, Equals<Awaited<ReturnType<F>>, IterableInfer<I>> extends 1 ? {\n    [key1 in Awaited<ReturnType<F>>]: key1;\n} : {\n    [key1 in Awaited<ReturnType<F>>]: IterableInfer<I> & {\n        [key2 in GetKeyOf<Cast<IterableInfer<I>, object>, key1>]: key1;\n    };\n}>;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const given = [\r\n  { category: "clothes", desc: "good" },\r\n  { category: "pants", desc: "bad" },\r\n  { category: "shoes", desc: "not bad" },\r\n];\r\n\r\nindexBy(a => a.category, given);\r\n// {\r\n//   clothes: { category: "clothes", desc: "good" },\r\n//   pants: { category: "pants", desc: "bad" },\r\n//   shoes: { category: "shoes", desc: "not bad" },\r\n// };\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://codesandbox.io/s/fxts-indexby-zpeok",children:"Try It"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/marpple/FxTS/blob/main/src/indexBy.ts",children:"Open Source Code"})})]})}function y(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);